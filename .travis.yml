dist: trusty
sudo: required
language: python
python:
  - 3.5

env:
  - CXX="g++-6" CC="gcc-6" SWIG_PYTHON=1 SWIG_MATLAB=0 # no MATLAB support for gcc>=5
  - CXX="g++-5" CC="gcc-5" SWIG_PYTHON=1 SWIG_MATLAB=0
  - CXX="g++-4.9" CC="gcc-4.9" SWIG_PYTHON=1 SWIG_MATLAB=1 COVERAGE="lcov"
  - CXX="clang++-3.7" CC="clang-3.7" SWIG_PYTHON=1 SWIG_MATLAB=1

addons:
  apt:
    sources:
    - llvm-toolchain-precise-3.7
    - ubuntu-toolchain-r-test

before_install:
  - echo "TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG TRAVIS_PULL_REQUEST=$TRAVIS_PULL_REQUEST TRAVIS_BRANCH=$TRAVIS_BRANCH"
  - 'if [ "$TRAVIS_REPO_SLUG" == "acados/acados" -a "$TRAVIS_PULL_REQUEST" == "false" ]; then
      openssl aes-256-cbc -K $encrypted_15c483c21b41_key -iv $encrypted_15c483c21b41_iv -in external/encrypted_scripts.tar.enc -out external/encrypted_scripts.tar -d;
      tar -xvf external/encrypted_scripts.tar -C external;
    fi'

install:
  - pushd external
  - 'if [ "$TRAVIS_REPO_SLUG" == "acados/acados" -a "$TRAVIS_PULL_REQUEST" == "false" ]; then
      source download_encrypted_files.sh;
    fi'
  - popd
  - travis_retry source .travis_install.sh
  - export MPLBACKEND=Agg # For matplotlib
  - export MATLABPATH=$HOME/local/lib:$MATLABPATH
  - export PYTHONPATH=$HOME/local/lib:$PYTHONPATH

before_script:
  - set -e

script:
  - cmake -E make_directory build
  - cmake -E chdir build cmake -DCMAKE_BUILD_TYPE=Test -DSWIG_MATLAB=$SWIG_MATLAB -DSWIG_PYTHON=$SWIG_PYTHON -DCOVERAGE=$COVERAGE ..
  - cmake --build build --clean-first
  - cmake --build build --target install
  - cmake --build build --target lint
  - cmake --build build --target acados_coverage || echo "Coverage report not generated"
  - cmake -E chdir build ctest --output-on-failure
  - cmake -E chdir build cmake -D CMAKE_BUILD_TYPE=Release ..
  - cmake --build build --clean-first
  - cmake -E chdir build cmake -D CMAKE_BUILD_TYPE=Debug ..
  - cmake --build build --clean-first
  #- pushd experimental/dang/esp32
  #- ./test_all_linux.sh

after_success:
  - pushd ${TRAVIS_BUILD_DIR}/build/test
  # Uploading report to CodeCov
  - bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
