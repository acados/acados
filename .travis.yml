dist: trusty
sudo: required
group: edge
language: python
python:
  - 3.5

env:
  - CXX="g++-6" CC="gcc-6" SWIG_PYTHON=ON SWIG_MATLAB=OFF # no MATLAB support for gcc>=5
  - CXX="g++-5" CC="gcc-5" SWIG_PYTHON=ON SWIG_MATLAB=OFF
  - CXX="g++-4.9" CC="gcc-4.9" SWIG_PYTHON=ON SWIG_MATLAB=ON COVERAGE="lcov"
  - CXX="clang++-3.7" CC="clang-3.7" SWIG_PYTHON=ON SWIG_MATLAB=OFF

addons:
  apt:
    sources:
    - llvm-toolchain-precise-3.7
    - ubuntu-toolchain-r-test

cache:
  directories:
    - /home/travis/external_software/
    - /home/travis/octave_download/

install:
  - pushd external
  - |
    if [ -f /home/travis/external_software/external.tar.gz ]; then
      tar -xf /home/travis/external_software/external.tar.gz > /dev/null;
      pushd coinhsl;
      chmod +x ./*;
      popd;
      pushd OOQP;
      chmod +x ./*;
      popd;
    else
      echo "Skipping installation of encrypted software";
    fi
  - |
    if [ -f /home/travis/external_software/matlab.tar.gz -a "${SWIG_MATLAB}" = 'ON' ]; then
      tar -xzf /home/travis/external_software/matlab.tar.gz > /dev/null
      export MATLAB_ROOT=$(pwd)/matlab
      pushd matlab/bin
      ./matlab -nodesktop -nojvm -nosplash < ../../hello_world.m
      popd
    else
      echo "Skipping MATLAB installation"
    fi
  - popd
  - travis_retry source .travis_install.sh
  - export MPLBACKEND=Agg # For matplotlib
  - export MATLABPATH=$HOME/local/lib:$MATLABPATH
  - export PYTHONPATH=$HOME/local/lib:$PYTHONPATH

before_script:
  - mkdir -p /home/travis/octave_download
  - |
    if [ -z "$(ls -1qA /home/travis/octave_download)" ]; then
      # directory empty
      pushd /home/travis/octave_download
      wget http://packages.octave.org/download/optim-1.5.2.tar.gz
      wget http://packages.octave.org/download/struct-1.0.14.tar.gz
      popd
    fi
  - mkdir -p /home/travis/external_software
  - |
    if [ -z "$(ls -1qA /home/travis/external_software)" ]; then
      pushd /home/travis/external_software
      [ -n "${EXTERNAL_SOFTWARE_DOWNLOADLINK}" ] && wget -q -O external.tar.gz "${EXTERNAL_SOFTWARE_DOWNLOADLINK}";
      [ -n "${MATLAB_DOWNLOADLINK}" ] && wget -q -O matlab.tar.gz "${MATLAB_DOWNLOADLINK}";
      popd
    fi

script:
  - cmake -E make_directory build
  - cmake -E chdir build cmake -DCMAKE_BUILD_TYPE=Release ..
  - cmake --build build --target lint
  - cmake --build build
  - cmake -E chdir build ctest --output-on-failure
  - rm -r -f build
  - cmake -E make_directory build
  - cmake -E chdir build cmake -DCMAKE_BUILD_TYPE=Debug -DUNIT_TESTS=ON -DSWIG_MATLAB=$SWIG_MATLAB -DMatlab_ROOT_DIR=$MATLAB_ROOT -DSWIG_PYTHON=$SWIG_PYTHON -DCOVERAGE=$COVERAGE -DCMAKE_INSTALL_PREFIX=$HOME/local ..
  - export CXX="$CXX -std=c++11" # needed for octave
  - cmake --build build
  - cmake -E chdir build ctest --output-on-failure
  - cmake --build build --target install
  - python -c "import acados" # check installation
  - cmake --build build --target acados_coverage || echo "Coverage report not generated"
  - rm -r -f build
  - mkdir build
  - mkdir install
  - export RELEASES_PREFIX="$(pwd)"
  - cmake -E chdir build cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$HOME/local -DMatlab_ROOT_DIR=$MATLAB_ROOT -DSWIG_MATLAB=$SWIG_MATLAB -DSWIG_PYTHON=ON ..
  - cmake --build build --target install
  - tar -zcf acados.tar.gz ${HOME}/local/lib

deploy:
  provider: releases
  api_key: "${GITHUB_OAUTH_TOKEN}"
  file: "${RELEASES_PREFIX}/acados.tar.gz"
  skip_cleanup: true
  on:
    tags: true


after_success:
  - pushd build
  # Upload report to CodeCov
  - if [ "$COVERAGE" == "lcov" ]; then bash <(curl -s https://codecov.io/bash); else echo "Codecov did not collect coverage reports"; fi
